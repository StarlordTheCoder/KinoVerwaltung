<Window x:Class="CinemaManager.MainView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:cinema="clr-namespace:CinemaManager.Modules.Cinema"
        xmlns:user="clr-namespace:CinemaManager.Modules.User"
        xmlns:film="clr-namespace:CinemaManager.Modules.Film"
        xmlns:presentation="clr-namespace:CinemaManager.Modules.Presentation"
        xmlns:mainView="clr-namespace:CinemaManager.MainView"
        xmlns:room="clr-namespace:CinemaManager.Modules.Room"
        xmlns:reservation="clr-namespace:CinemaManager.Modules.Reservation"
        Title="Cinema Manager" Height="350" Width="525" WindowState="Maximized"
        d:DataContext="{d:DesignInstance mainView:MainWindowViewModel}"
        x:Name="Window"
        Loaded="MainWindow_OnLoaded">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Menu Grid.Row="0">
			<MenuItem Header="File">
				<MenuItem Command="{Binding DataSourceService.OpenFileCommand}" />
				<MenuItem Command="{Binding DataSourceService.SaveFileCommand}" />
				<MenuItem Command="{Binding DataSourceService.SynchronizeCommand}"
				          ToolTip="Save and reload all data" />
				<MenuItem Header="About" Command="{Binding AboutCommand}" />
				<MenuItem Header="Auto save" IsCheckable="True" IsChecked="{Binding AutoSaveEnabled}" />

			</MenuItem>
			<MenuItem Header="Tools">
				<MenuItem Header="Cinema Module" IsChecked="{Binding CinemaModule.IsVisible, Mode=TwoWay}"
				          IsCheckable="True" />
				<MenuItem Header="Film Module" IsChecked="{Binding FilmModule.IsVisible, Mode=TwoWay}"
				          IsCheckable="True" />
				<MenuItem Header="Presentation Module" IsChecked="{Binding PresentationModule.IsVisible, Mode=TwoWay}"
				          IsCheckable="True" />
				<MenuItem Header="Reservation Module" IsChecked="{Binding ReservationModule.IsVisible, Mode=TwoWay}"
				          IsCheckable="True" />
				<MenuItem Header="User Module" IsChecked="{Binding UserModule.IsVisible, Mode=TwoWay}"
				          IsCheckable="True" />
				<MenuItem Header="Room Module" IsChecked="{Binding RoomModule.IsVisible, Mode=TwoWay}"
				          IsCheckable="True" />
			</MenuItem>
			<MenuItem Header="Layout">
				<MenuItem Command="{Binding LayoutService.OpenLayoutCommand}" />
				<MenuItem Command="{Binding LayoutService.SaveLayoutCommand}" />
				<MenuItem Command="{Binding LayoutService.SaveAsLayoutCommand}" />
			</MenuItem>
		</Menu>

		<dock:DockingManager
			Grid.Row="1"
			x:Name="DockingManager"
			AnchorablesSource="{Binding Modules}">

			<dock:DockingManager.Resources>
				<!-- add views for specific ViewModels -->
				<DataTemplate DataType="{x:Type cinema:CinemaModule}">
					<cinema:CinemaModuleView />
				</DataTemplate>
				<DataTemplate DataType="{x:Type user:UserModule}">
					<user:UserModuleView />
				</DataTemplate>
				<DataTemplate DataType="{x:Type film:FilmModule}">
					<film:FilmModuleView />
				</DataTemplate>
				<DataTemplate DataType="{x:Type presentation:PresentationModule}">
					<presentation:PresentationModuleView />
				</DataTemplate>
				<DataTemplate DataType="{x:Type room:RoomModule}">
					<room:RoomModuleView />
				</DataTemplate>
				<DataTemplate DataType="{x:Type reservation:ReservationModule}">
					<reservation:ReservationModuleView />
				</DataTemplate>
			</dock:DockingManager.Resources>

			<dock:DockingManager.LayoutItemContainerStyle>
				<Style TargetType="{x:Type dock:LayoutAnchorableItem}">
					<Setter Property="Title" Value="{Binding Model.Title}" />
					<Setter Property="ContentId" Value="{Binding Model.Title}" />
					<Setter Property="Uid" Value="{Binding Model.Title}" />
					<Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
					<Setter Property="AutoHideCommand" Value="{Binding Model.CloseCommand}" />
					<Setter Property="DockAsDocumentCommand" Value="{Binding Model.CloseCommand}" />
					<Setter Property="Visibility"
					        Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}" />
				</Style>
			</dock:DockingManager.LayoutItemContainerStyle>
		</dock:DockingManager>
		<Grid Grid.Row="2" Background="LightGray">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition />
			</Grid.RowDefinitions>
			<Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=Data}" Content="Data" />
			<Label Grid.Column="1" Grid.Row="0" Name="Data" Content="{Binding Session.DataPath}" />
			<Label Grid.Row="1" Grid.Column="0" Target="{Binding ElementName=Layout}" Content="Layout" />
			<Label Grid.Column="1" Grid.Row="1" Name="Layout" Content="{Binding Session.LayoutPath}" />
		</Grid>
	</Grid>
</Window>